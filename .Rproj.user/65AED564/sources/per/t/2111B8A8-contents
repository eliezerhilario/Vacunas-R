# MODULOS ================================================

## Modulo modSelectIndicadores para seleccionar los indicadores a mostrar  ----------------------------------------
modSelectIndicadoresUI <- function(id) {
  ns <- NS(id)
  tagList(
    fluidRow(
      column(4,
         selectInput(ns('indicadores'), label = 'INDICADORES', 
            choices = c('MONTO', 'AUTORIZACIONES', 'MM AUTORIZACION', 'USUARIOS', 'MM USUARIO')))
    )
  )
}

modSelectIndicadoresServer <- function(id) {
  moduleServer(id, function(input, output, session) {
    return(indicadores = reactive(input$indicadores))
  })
}


## Modulo modGrafico para generar el gráfico  ----------------------------------------
modGraficoUI <- function(id) {
  ns <- NS(id)
  tagList(
    fluidRow(
      box(title = 'Gráfico', plotOutput(ns('grafico')), width = 12, status = 'success', solidHeader = T))
  )
}

modGraficoServer <- function(id) {
  moduleServer(id, function(input, output, session) {
    
    # Preparar los datos del gráfico
    datosGrafico = reactive(dataGraficos(AÑO, MES))
    
    # Generar el gráfico
    output$grafico <- renderPlot({
      modeloGrafico(datosGrafico(), x = 'MES', y = input$indicadores, group = 'AÑO')
    }, res = 96)
    
  })
}


# MODELOS ================================================
## Datos Graficos ---------------------------------------- 
dataGraficos = function(x, y = NULL) {
  Datos %>% group_by({{x}}, {{y}}) %>%
    summarise(MONTO = sum(`MONTO AUTORIZADO`),
              AUTORIZACIONES = n_distinct(INTEGRALIDAD),
              `MM AUTORIZACION` = MONTO / AUTORIZACIONES,
              USUARIOS = n_distinct(CDPERSON),
              `MM USUARIO` = MONTO / USUARIOS,
              .groups = "drop"
    )
}


## Modelo Gráfico ---------------------------------------- 
modeloGrafico = function(datos, x, y, group) {
  ggplot(datos, aes(x = .data[[x]], y = .data[[y]], group = .data[[group]], color = .data[[group]])) +
    geom_line(size = 0.9) + geom_point(size = 3.5) + labs(title = y) +
    scale_y_continuous(labels = comma) + theme_minimal()
}
